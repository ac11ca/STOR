<?php

namespace AppBundle\Repository;
use AppBundle\Factory\UserFactory;

use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\ContainerAwareInterface;
use Doctrine\ORM\EntityRepository;
/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository implements ContainerAwareInterface
{
    private $container;

    public function setContainer(ContainerInterface $container = null)
    {
        $this->container = $container;
    }

    public function findByFilter($filter = null)
    {
        $query = $this->createQueryBuilder('u');
        if(!empty($filter))
        {
            $query
                ->where('u.username like :filter')
                ->setParameter(':filter', "%$filter%");
        }

        return $query->getQuery()->getResult();
    }

    public function findByPhones()
    {
        $query = $this->createQueryBuilder('u');
        $query->where('u.phone IS NOT NULL');

        return $query->getQuery()->getResult();
    }

    public function getFactory($Doctrine, $Container)
    {
        $Manager = $Container->get('app.user_manager');
        $CryptographyService = $Container->get('app.cryptography');
        return new UserFactory($this, $Doctrine,$Manager, $CryptographyService);
    }

    public function authenticateWordPress($username, $password)
    {
        
    }
}
